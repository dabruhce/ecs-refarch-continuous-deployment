Parameters:
  LambdaBannercreateApigatewayGitHubRepo:
    Type: String

  GitHubBranch:
    Type: String

  GitHubToken:
    Type: String

  GitHubUser:
    Type: String

  TemplateBucket:
    Type: String

  AwsCfnStack:
    Type: String

Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "cloudformation.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:*
                  - ecr:*
                  - iam:*

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codebuild.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:*
                  - cloudformation:*
                  - logs:*
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - lambda:*
              - Resource:
                - arn:aws:apigateway:*::/restapis
                - arn:aws:apigateway:*::/restapis/*
                - arn:aws:apigateway:us-east-1::/usageplans
                - arn:aws:apigateway:us-east-1::/usageplans/*
                - arn:aws:apigateway:us-east-1::/apikeys
                - arn:aws:apigateway:us-east-1::/apikeys/*
                Effect: Allow
                Action:
                  - apigateway:GET
                  - apigateway:HEAD
                  - apigateway:OPTIONS
                  - apigateway:PATCH
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:DELETE
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:*
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
              - Resource: arn:aws:cloudformation:us-east-1:290373986345:stack/begasp-ad-validation-api-staging/*
                Effect: Allow
                Action:
                  - cloudformation:*

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "codepipeline.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  - !Sub arn:aws:s3:::${TemplateBucket}
                  - !Sub arn:aws:s3:::${TemplateBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:PassRole

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodeBuildProjectStaging:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - npm install -g serverless
            build:
              commands:
                - echo $environment
                - serverless package --stage $ENVIRONMENT --region us-east-1
                - serverless deploy --stage $ENVIRONMENT --region us-east-1
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/nodejs:6.3.1"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: ENVIRONMENT
            Value: staging
          - Name: StackName
            Value: !Ref AwsCfnStack
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  CodeBuildProjectProduction:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - npm install -g serverless
            build:
              commands:
                - echo $environment
                - serverless package --stage $ENVIRONMENT --region us-east-1
                - serverless deploy --stage $ENVIRONMENT --region us-east-1
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/nodejs:6.3.1"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: ENVIRONMENT
            Value: production
          - Name: StackName
            Value: !Ref AwsCfnStack
      Name: lambda-bannercreate-apigateway-production
      ServiceRole: !Ref CodeBuildServiceRole
#add to environment
#!Ref GitHubBranch

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref LambdaBannercreateApigatewayGitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
            - Name: Template
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts:
                - Name: Template
              RunOrder: 1
              Configuration:
                S3Bucket: !Ref TemplateBucket
                S3ObjectKey: templates.zip
        - Name: BuildStaging
          Actions:
            - Name: BuildStaging
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProjectStaging
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: BuildProduction
          Actions:
            - Name: BuildProduction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProjectProduction
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutputProd
              RunOrder: 1

Outputs:
  LambdaLivestreamcaptureApigatewayGitHubRepo:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
